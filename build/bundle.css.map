{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../scripts/formula-examples/FormulaExamples.svelte",
    "../scripts/formula-examples/FormulaPreview.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\timport FormulaPreview from './FormulaPreview.svelte'\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let formula;\n\texport let planDeCompte;\n\texport let lignes;\n\texport let examples;\n</script>\n\n<style>\ninput.formula{\n\twidth: 100%;\n\tmargin-bottom: 0.5em;\n\n\tfont-size: 1.6em;\n\tfont-family: monospace;\n}\n</style>\n\n<h1>Outil de test de formules</h1>\n\n<h2>Un outil pour filtrer les lignes d'un document budgétaires</h2>\n<p>Pour le moment, cet outil ne filtre que les données des <a href=\"https://www.datalocale.fr/dataset/comptes-administratifs-budget-principal-donnees-budgetaires-du-departement-de-la-gironde\">Comptes Administratifs du Département de la Gironde</a> pour l'année 2017</p>\n\n<h2>Exemples de formules</h2>\n\n<ul class=\"examples\">\n\t{#each examples as {formula, description}}\n\t\t<li>\n\t\t\t<a href=\"#{encodeURIComponent(formula)}\"><code>{formula}</code></a>\n\t\t\t<span> : {description}</span>\n\t\t</li>\n\t{/each}\n</ul>\n\n<input autofocus class=\"formula\" type=\"text\" bind:value={formula} on:input=\"{e => dispatch('formula-change', e.target.value.trim())}\">\n\n<FormulaPreview {lignes} {planDeCompte}/>\n",
    "<script>\n    import {sum} from 'd3-array'\n    \n\texport let lignes;\n\texport let planDeCompte;\n    \n    $: total = lignes && sum(lignes.map(r => r['MtReal'])).toLocaleString('fr-FR', {style: 'currency', currency: 'EUR'})\n</script>\n\n<style>\n\noutput{\n\tbackground-color: #EEE;\n\twhite-space: pre;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n}\n\noutput table tbody td{\n\tpadding: 0 0.5em;\n}\n\noutput table tbody td:nth-child(4),\noutput table tbody td:nth-child(5){\n\ttext-align: right;\n}\n</style>\n\n{#if planDeCompte && lignes}\n\n    <h1>Compte Administratif Gironde {planDeCompte.Exer}</h1>\n    <h2>{lignes.length} lignes | {total}</h2>\n\n    <output>\n        <table>\n            <thead>\n                <tr>\n                    {#each ['RD', 'FI', 'Fonction', 'Nature', 'Montant'] as t}\n                        <th>{t}</th>\n                    {/each}\n                </tr>\n            </thead>\n            <tbody>\n                {#each lignes as l (l)}\n                    <tr>\n                        <td>{l['CodRD']}</td>\n                        <td>{planDeCompte.ligneBudgetFI(l)}</td>\n                        <td>{l['Fonction']}</td>\n                        <td>{l['Nature']}</td>\n                        <td>{l['MtReal'].toLocaleString('fr-FR', {style: 'currency', currency: 'EUR'})}</td>\n                    </tr>\n                {/each}\n            </tbody>\n        </table>\n    </output>\n\n{/if}"
  ],
  "names": [],
  "mappings": "AAaA,KAAK,sBAAQ,CAAC,AACb,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,KAAK,CAEpB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,SAAS,AACvB,CAAC;ACRD,qBAAM,CAAC,AACN,gBAAgB,CAAE,IAAI,CACtB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,YAAY,AAC9B,CAAC,AAED,qBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAE,CAAC,AACrB,OAAO,CAAE,CAAC,CAAC,KAAK,AACjB,CAAC,AAED,qBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAE,WAAW,CAAC,CAAC,CAClC,qBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAE,WAAW,CAAC,CAAC,CAAC,AAClC,UAAU,CAAE,KAAK,AAClB,CAAC"
}